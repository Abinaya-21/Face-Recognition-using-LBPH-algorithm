import cv2, sys, numpy, os 
#path to haar file in local directory
haar_file = 'C:\\Users\\Admin\\Desktop\\Myprojects\\python_projects\\face_recognition\\haarcascade_frontalface_default.xml'

#path to store the captured frames in the local directory
path = 'C:\\Users\\Admin\\Desktop\\Myprojects\\python_projects\\face_recognition\\model_images\\abinaya'


# defining the size of images 
(width, height) = (130, 100)	 


face_cascade = cv2.CascadeClassifier(haar_file) 
#print(face_cascade)

#to trigger the camera. 0=>inbuilt camera is used
webcam = cv2.VideoCapture(0) 

# The program loops until it has 30 images of the face. 
count = 1
while count < 30: 
    #check => bool which returns true if python is able to read the videoCapture object
    #frame => numpy Array which represents the first image that the video captures
	check,frame = webcam.read() 
    #converting the rgb frame into grayscale image using cvtColor(src_file,color_coversion)
	gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY) 
	faces = face_cascade.detectMultiScale(gray, 1.3, 4) 
	#print(faces)
	for (x, y, w, h) in faces: 
		cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2) 
		face = gray[y:y + h, x:x + w] 
		face_resize = cv2.resize(face, (width, height)) 
		cv2.imwrite('% s/% s.png' % (path, count), face_resize) 
	count += 1
	
	cv2.imshow('OpenCV', frame) 
	key = cv2.waitKey(10) 
	if key == 27: 
		break
webcam.release()
cv2.destroyAllWindows()
